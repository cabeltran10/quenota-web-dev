{"version":3,"sources":["components/header.js","components/grade.js","components/course.js","components/courseList.js","components/principal.js","App.js","serviceWorker.js","index.js"],"names":["header","props","state","logout","bind","capturaLogin","capturaRegister","e","preventDefault","user","document","getElementsByName","value","pass","console","log","fetch","then","res","json","data","localStorage","setItem","getItem","refresh","clear","this","window","location","reload","name","method","body","JSON","stringify","mail","password","headers","Accept","className","role","href","type","data-toggle","data-target","id","htmlFor","required","onClick","React","Component","Grade","nameGrade","currentGrade","percentage","class","readOnly","Course","course","idCourse","grades","globalCourses","approximation","gradeObjective","allCourses","addGrade","handleChange","editCourse","change","asignarNotasCurso","fetchGrades","fetchGlobalCourses","estadisticas","pApproximation","pGrade","pNameCourse","pId","setState","nameCourse","_id","notas","promedio","porcentajes","forEach","element","parseInt","alert","cursoElegido","lista","todosCursos","email","push","nombreCurso","auxId","nNota","nombreNota","cActual","calificacionActual","porcent","porcentaje","aux","j","i","courses","getElementById","arreglo","length","aux3","nameCourseAux","aux4","catch","err","error","vv","pElement","target","onChange","map","key","grade","CourseList","idCurrentCourse","fetchTasks","actualizar","enviarURL","listaCursos","Principal","App","src","alt","title","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5d9d850c.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../App.css\";\n\nclass header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.logout = this.logout.bind(this);\n    this.capturaLogin = this.capturaLogin.bind(this);\n    this.capturaRegister = this.capturaRegister.bind(this);\n  }\n  capturaLogin(e) {\n    e.preventDefault();\n    let user = document.getElementsByName(\"user\")[0].value;\n    let pass = document.getElementsByName(\"pass\")[0].value;\n\n    console.log(user, pass);\n    /* console.log(\"Loggin Exitoso\")\n        localStorage.setItem(\"loggeado\",true)\n        localStorage.setItem(\"user\",user)\n        console.log(localStorage.getItem(\"loggeado\"))\n        */\n    fetch(`http://localhost:5000/students/${user}`)\n      .then(res => res.json())\n      .then(data => {\n        console.log(data);\n        if (data[\"password\"] === pass) {\n          console.log(\"Loggin Exitoso\");\n          localStorage.setItem(\"loggeado\", true);\n          localStorage.setItem(\"email\", user);\n          console.log(localStorage.getItem(\"loggeado\"));\n          this.refresh();\n        }\n      });\n  }\n  logout(e) {\n    localStorage.clear();\n    this.refresh();\n  }\n  refresh() {\n    window.location.reload(true);\n  }\n  capturaRegister(e) {\n    e.preventDefault();\n    let user = document.getElementsByName(\"userRegister\")[0].value;\n    let name = document.getElementsByName(\"nameRegister\")[0].value;\n    let pass = document.getElementsByName(\"passRegister\")[0].value;\n    console.log(user, name, pass);\n    fetch(\n      \"http://localhost:5000/students\",\n      {\n        method: \"POST\",\n        body: JSON.stringify({ mail: user, password: pass, name: name }),\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        }\n      },\n      this.refresh()\n    );\n  }\n  render() {\n    if (localStorage.getItem(\"loggeado\") == null) {\n      return (\n        <div>\n          <nav\n            className=\"navbar navbar-expand-lg navbar-dark bg-primary fixed-top\"\n            role=\"navigation\"\n          >\n            <div className=\"container\">\n              <a className=\"navbar-brand tittle\" href=\"/\">\n                QUE NOTA!\n              </a>\n              <button\n                className=\"navbar-toggler border-0\"\n                type=\"button\"\n                data-toggle=\"collapse\"\n                data-target=\"#exCollapsingNavbar\"\n              >\n                &#9776;\n              </button>\n              <div className=\"collapse navbar-collapse\" id=\"exCollapsingNavbar\">\n                <ul className=\"nav navbar-nav flex-row justify-content-between ml-auto\">\n                  <li className=\"dropdown order-1\">\n                    <button\n                      type=\"button\"\n                      id=\"dropdownMenu1\"\n                      data-toggle=\"dropdown\"\n                      className=\"btn btn-outline-light dropdown-toggle\"\n                    >\n                      Registarse<span className=\"caret\"></span>\n                    </button>\n                    <ul className=\"dropdown-menu dropdown-menu-right mt-6\">\n                      <li className=\"px-2 py-2\">\n                        <form className=\"modificado2\">\n                          <div className=\"form-group\">\n                            <label htmlFor=\"userInput\" className=\"label-login\">\n                              Usuario\n                            </label>\n                            <input\n                              id=\"userInput\"\n                              className=\"form-control form-control-sm input-login\"\n                              type=\"text\"\n                              required=\"\"\n                              name=\"userRegister\"\n                            />\n                          </div>\n                          <div className=\"form-group\">\n                            <label\n                              htmlFor=\"passwordInput\"\n                              className=\"label-login\"\n                            >\n                              Nombre\n                            </label>\n                            <input\n                              id=\"nameInput\"\n                              className=\"form-control form-control-sm input-login\"\n                              type=\"text\"\n                              name=\"nameRegister\"\n                              required=\"\"\n                            />\n                          </div>\n\n                          <div className=\"form-group\">\n                            <label\n                              htmlFor=\"passwordInput\"\n                              className=\"label-login\"\n                            >\n                              Contraseña\n                            </label>\n                            <input\n                              id=\"passwordInput\"\n                              className=\"form-control form-control-sm input-login\"\n                              type=\"password\"\n                              name=\"passRegister\"\n                              required=\"\"\n                            />\n                          </div>\n\n                          <div className=\"form-group\">\n                            <button\n                              type=\"submit\"\n                              className=\"btn btn-primary btn-block\"\n                              onClick={this.capturaRegister}\n                            >\n                              Registrar\n                            </button>\n                          </div>\n                        </form>\n                      </li>\n                    </ul>\n                  </li>\n                  <li className=\"dropdown order-1\">\n                    <button\n                      type=\"button\"\n                      id=\"dropdownMenu1\"\n                      data-toggle=\"dropdown\"\n                      className=\"btn btn-outline-light dropdown-toggle\"\n                    >\n                      Ingresar <span className=\"caret\"></span>\n                    </button>\n                    <ul className=\"dropdown-menu dropdown-menu-right mt-6\">\n                      <li className=\"px-2 py-2\">\n                        <form className=\"modificado\">\n                          <div className=\"form-group\">\n                            <label htmlFor=\"userInput\" className=\"label-login\">\n                              Usuario\n                            </label>\n                            <input\n                              id=\"userInput\"\n                              className=\"form-control form-control-sm input-login\"\n                              type=\"text\"\n                              required=\"\"\n                              name=\"user\"\n                            />\n                          </div>\n\n                          <div className=\"form-group\">\n                            <label\n                              htmlFor=\"passwordInput\"\n                              className=\"label-login\"\n                            >\n                              Contraseña\n                            </label>\n                            <input\n                              id=\"passwordInput\"\n                              className=\"form-control form-control-sm input-login\"\n                              type=\"password\"\n                              name=\"pass\"\n                              required=\"\"\n                            />\n                          </div>\n\n                          <div className=\"form-group\">\n                            <button\n                              type=\"submit\"\n                              className=\"btn btn-primary btn-block\"\n                              href=\"/\"\n                              onClick={this.capturaLogin}\n                            >\n                              Entrar\n                            </button>\n                          </div>\n                        </form>\n                      </li>\n                    </ul>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </nav>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <nav\n            className=\"navbar navbar-expand-lg navbar-dark bg-primary fixed-top\"\n            role=\"navigation\"\n          >\n            <div className=\"container\">\n              <a className=\"navbar-brand tittle\" href=\"/\">\n                QUE NOTA!\n              </a>\n              <button\n                className=\"navbar-toggler border-0\"\n                type=\"button\"\n                data-toggle=\"collapse\"\n                data-target=\"#exCollapsingNavbar\"\n              >\n                &#9776;\n              </button>\n              <div className=\"collapse navbar-collapse\" id=\"exCollapsingNavbar\">\n                <ul className=\"nav navbar-nav flex-row justify-content-between ml-auto\">\n                  <li className=\"dropdown order-1\">\n                    <div className=\"form-group\">\n                      <button\n                        className=\"btn btn-primary btn-block\"\n                        href=\"/\"\n                        onClick={this.logout}\n                      >\n                        Salir\n                      </button>\n                    </div>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </nav>\n\n          <br></br>\n        </div>\n      );\n    }\n  }\n}\nexport default header;\n","import React from 'react'\nconst Grade = (props)=> {\n  const {nameGrade,currentGrade,percentage} = props;\n  return (\n    <div>\n      <br></br>\n      <div className=\"form-row\">\n        <div class=\"col-md-3 borde\">\n          <input type=\"text\" class=\"form-control input-course\" id=\"nombreNota\" name=\"nombreNota\" value={nameGrade} readOnly/>\n        </div>\n        <div className=\"col-md-3 borde\">\n          <input type=\"text\" class=\"form-control input-course\" id=\"calificacionActual\" name=\"calificacionActual\" value={currentGrade} readOnly/>\n        </div>\n        <div className=\"col-md-3 borde\">\n          <input type=\"text\" class=\"form-control input-course\" id=\"porcentaje\" name=\"porcentaje\" value={percentage} readOnly/>\n        </div>\n\n      </div>\n\n    </div>\n  );\n}\n\nexport default Grade;\n","import React from \"react\";\nimport Grade from \"../components/grade\";\nclass Course extends React.Component {\n  constructor(props) {\n    super();\n\n    let course = props.idCourse;\n    console.log(\"const\", course);\n    this.state = {\n      grades: [],\n      course: course,\n      globalCourses: [],\n      approximation: \"\",\n      gradeObjective: \"\",\n      allCourses: []\n    };\n    this.addGrade = this.addGrade.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.editCourse = this.editCourse.bind(this);\n    this.change = this.change.bind(this);\n\n    this.asignarNotasCurso = this.asignarNotasCurso.bind(this);\n    this.fetchGrades = this.fetchGrades.bind(this);\n    this.fetchGlobalCourses = this.fetchGlobalCourses.bind(this);\n    this.estadisticas = this.estadisticas.bind(this);\n  }\n  componentDidMount() {\n    this.fetchGrades();\n    this.fetchGlobalCourses();\n  }\n  asignarNotasCurso(data, pApproximation, pGrade, pNameCourse, pId) {\n    this.setState({\n      grades: data,\n      approximation: pApproximation,\n      gradeObjective: pGrade,\n      nameCourse: pNameCourse,\n      _id: pId\n    });\n  }\n  estadisticas() {\n    let notas = this.state.grades;\n    let promedio = 0;\n    let porcentajes = 0;\n    notas.forEach(function(element) {\n      porcentajes = porcentajes + parseInt(element[\"percentage\"]);\n      promedio =\n        promedio +\n        parseInt(element[\"percentage\"]) * parseInt(element[\"currentGrade\"]);\n    });\n    console.log(\n      \"Porcentajes: \",\n      porcentajes,\n      \"Promedio\",\n      promedio / 100,\n      \"Maxima nota\",\n      (promedio + 5 * (100 - porcentajes)) / 100\n    );\n    var respuesta =\n      \"Porcentaje visto: \" +\n      porcentajes +\n      \"%\\n\" +\n      \"Promedio (definitiva): \" +\n      promedio / 100 +\n      \"\\nMaxima nota posible: \" +\n      (promedio + 5 * (100 - porcentajes)) / 100;\n    alert(respuesta);\n  }\n  fetchGrades() {\n    let cursoElegido = this.state.course;\n    let lista = [];\n    let todosCursos = [];\n    let email = localStorage.getItem(\"email\");\n    fetch(`http://localhost:5000/students/${email}`)\n      .then(res => res.json())\n      .then(data => {\n        data = data[\"courses\"];\n        todosCursos = data;\n\n        console.log(\"data-course\", data);\n\n        let approximation = \"\";\n        let gradeObjective = \"\";\n        let name = \"\";\n        let _id = \"\";\n        if (data != null) {\n          data.forEach(function(element) {\n            name = element[\"nameCourse\"];\n            approximation = element[\"approximation\"];\n            gradeObjective = element[\"gradeObjective\"];\n            console.log(\"nota-objetivo\", gradeObjective);\n            _id = element[\"_id\"];\n\n            if (name === cursoElegido) {\n              lista = element[\"grades\"];\n              console.log(\"data-final\", data);\n            }\n          });\n          this.asignarNotasCurso(\n            lista,\n            approximation,\n            gradeObjective,\n            name,\n            _id\n          );\n          this.setState({ allCourses: todosCursos });\n        }\n      });\n  }\n\n  fetchGlobalCourses() {\n    let lista = [];\n    fetch(\"http://localhost:5000/courses\")\n      .then(res => res.json())\n      .then(data => {\n        data.forEach(function(element) {\n          let name = element[\"name\"];\n          lista.push(name);\n        });\n        this.setState({ globalCourses: lista });\n      });\n  }\n\n  addGrade() {\n    if (this.state._id) {\n      let nombreCurso = this.state.course;\n      let auxId = this.state._id;\n      let nNota = this.state.nombreNota;\n      let cActual = this.state.calificacionActual;\n      let porcent = this.state.porcentaje;\n      let lista = this.state.grades;\n      let aux = this.state.allCourses;\n      let j = 0;\n      lista.forEach(function(element) {\n        if (element._id === auxId) {\n          let aux2 = {\n            _id: auxId,\n            nameGrade: nNota,\n            currentGrade: cActual,\n            percentage: porcent\n          };\n          element = aux2;\n          lista[j] = element;\n          console.log(\"cambiado\", element);\n          let i = 0;\n          aux.forEach(function(element) {\n            if (element[\"nameCourse\"] === nombreCurso) {\n              aux[i][\"grades\"] = lista;\n            }\n            i = i + 1;\n          });\n          j = j + 1;\n        }\n\n        fetch(\n          `http://localhost:5000/students/${localStorage.getItem(\"email\")}`,\n          {\n            method: \"PATCH\",\n            body: JSON.stringify({ courses: aux }),\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\"\n            }\n          }\n        );\n      });\n      this.setState(\n        {\n          grades: lista,\n          _id: \"\",\n          nombreNota: \"\",\n          calificacionActual: \"\",\n          porcentaje: \"\"\n        },\n        () => {\n          document.getElementById(\"nombreNota\").value = this.state.nombreNota;\n          document.getElementById(\n            \"calificacionActual\"\n          ).value = this.state.calificacionActual;\n          document.getElementById(\"porcentaje\").value = this.state.porcentaje;\n        }\n      );\n    }\n\n    //**Es una nota nueva */\n    else {\n      let arreglo = this.state.grades;\n      let nNota = this.state.nombreNota;\n      let cActual = this.state.calificacionActual;\n      let porcent = this.state.porcentaje;\n      let auxId = arreglo.length + 1;\n      let aux = this.state.allCourses;\n      let aux3 = this.state.nameCourseAux;\n      let aux4 = this.state.course;\n\n      document.getElementById(\"nombreNota\").value = \"\";\n      document.getElementById(\"calificacionActual\").value = \"\";\n      document.getElementById(\"porcentaje\").value = \"\";\n      arreglo.push({\n        nameGrade: nNota,\n        currentGrade: cActual,\n        percentage: porcent,\n        _id: auxId\n      });\n      this.setState(\n        {\n          grades: arreglo,\n          nombreNota: \"\",\n          calificacionActual: \"\",\n          porcentaje: \"\"\n        },\n        () => {\n          document.getElementById(\"nombreNota\").value = this.state.nombreNota;\n          document.getElementById(\n            \"calificacionActual\"\n          ).value = this.state.calificacionActual;\n          document.getElementById(\"porcentaje\").value = this.state.porcentaje;\n\n          console.log(this.state.grades);\n          let email = localStorage.getItem(\"email\");\n          let gradeObjective = this.state.gradeObjective;\n          console.log(\"grade objetive\", gradeObjective);\n          if (this.state.course === \"nuevo\") {\n            console.log(\"NUEVOOOOO\");\n            aux.push({\n              nameCourse: aux3,\n              grades: arreglo,\n              gradeObjective: gradeObjective,\n              approximation: \"APO\"\n            });\n            console.log(aux);\n            fetch(`http://localhost:5000/students/${email}`, {\n              method: \"PATCH\",\n              body: JSON.stringify({ courses: aux }),\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\"\n              }\n            });\n            this.setState({ course: aux3 });\n          } else {\n            aux.forEach(function(element) {\n              if (element[\"nameCourse\"] === aux4) {\n                element[\"grades\"] = arreglo;\n                element[\"nameCourse\"] = aux3;\n              }\n              fetch(`http://localhost:5000/students/${email}`, {\n                method: \"PATCH\",\n                body: JSON.stringify({ courses: aux }),\n                headers: {\n                  Accept: \"application/json\",\n                  \"Content-Type\": \"application/json\"\n                }\n              })\n                .then(res => res.json())\n                .then(data => {})\n                .catch(err => console.error(err));\n            });\n          }\n        }\n      );\n    }\n  }\n\n  editCourse(id) {\n    console.log(\"EDITAR\", id);\n    let arreglo = this.state.grades;\n    let vv = false;\n    let aux;\n    arreglo.forEach(function(element) {\n      if (element._id === id) {\n        console.log(\"encontrado\", id);\n        vv = true;\n        aux = element;\n      }\n    });\n    if (vv) {\n      this.change(id, aux);\n    }\n  }\n  change(id, pElement) {\n    console.log(\"metodo change\", id, pElement);\n    let nNota = pElement.nameGrade;\n    let cActual = pElement.currentGrade;\n    let porcent = pElement.percentage;\n    this.setState(\n      {\n        _id: id,\n        nombreNota: nNota,\n        calificacionActual: cActual,\n        porcentaje: porcent\n      },\n      () => {\n        document.getElementById(\"nombreNota\").value = this.state.nombreNota;\n        document.getElementById(\n          \"calificacionActual\"\n        ).value = this.state.calificacionActual;\n        document.getElementById(\"porcentaje\").value = this.state.porcentaje;\n      }\n    );\n    console.log(\"Fin metodo change:\", this.state);\n  }\n\n  handleChange(e) {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value\n    });\n    console.log(name, value);\n  }\n  render() {\n    const { grades } = this.state;\n    const { globalCourses } = this.state;\n    const { course } = this.state;\n    return (\n      <div className=\"course\" id=\"course\">\n        <br></br>\n        <div className=\"fila_uno\">\n          <div className=\"col-md-5\">\n            <label htmlFor=\"inputState\">\n              <h3>Nombre del Curso</h3>\n            </label>\n            <select\n              id=\"inputState\"\n              className=\"form-control option-name-course \"\n              name=\"nameCourseAux\"\n              onChange={this.handleChange}\n            >\n              <option value={course}></option>\n              {globalCourses.map(course => (\n                <option key={course}>{course}</option>\n              ))}\n            </select>\n          </div>\n          <button\n            type=\"button\"\n            className=\"btn btn-primary boton_agregar\"\n            onClick={this.addGrade}\n          >\n            +\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn-primary\"\n            onClick={this.estadisticas}\n          >\n            Estadisticas\n          </button>\n        </div>\n        <br></br>\n        <div className=\"form-row\">\n          <div className=\"col-md-3 borde\">\n            <label htmlFor=\"objectiveGrade\">\n              <h3>Nota Objetivo</h3>\n            </label>\n            <input\n              type=\"text\"\n              className=\"form-control input-course\"\n              value={this.state.gradeObjective}\n              onChange={this.handleChange}\n              name=\"gradeObjective\"\n            />\n          </div>\n          <label htmlFor=\"test1\" className=\"checkbox special\">\n            <input\n              type=\"checkbox\"\n              id=\"test1\"\n              name=\"aproximacion\"\n              value=\"1\"\n              onChange={this.handleChange}\n            />\n            <span>Aproximación</span>\n          </label>\n        </div>\n        <div className=\"form-row\">\n          <div className=\"col-md-3 borde\">\n            <label htmlFor=\"nombreNota\">\n              <h3>Nombre Nota</h3>\n            </label>\n            <input\n              type=\"text\"\n              className=\"form-control input-course\"\n              id=\"nombreNota\"\n              onChange={this.handleChange}\n              name=\"nombreNota\"\n            />\n          </div>\n          <div className=\"col-md-3 borde\">\n            <label htmlFor=\"calificacionActual\">\n              <h3>Calificación Actual</h3>\n            </label>\n            <input\n              className=\"form-control input-course\"\n              type=\"number\"\n              id=\"calificacionActual\"\n              onChange={this.handleChange}\n              name=\"calificacionActual\"\n            />\n          </div>\n          <div className=\"col-md-3 borde\">\n            <label htmlFor=\"porcentaje\">\n              <h3>Porcentaje</h3>\n            </label>\n            <input\n              className=\"form-control input-course\"\n              name=\"porcentaje\"\n              id=\"porcentaje\"\n              onChange={this.handleChange}\n            />\n          </div>\n        </div>\n        <div>\n          {grades.map(grade => (\n            <div>\n              {\" \"}\n              <Grade\n                id={grade._id}\n                key={grade}\n                nameGrade={grade.nameGrade}\n                currentGrade={grade.currentGrade}\n                percentage={grade.percentage}\n              ></Grade>{\" \"}\n              <button\n                onClick={() => this.editCourse(grade._id)}\n                className=\"btn btn-primary\"\n              >\n                Editar\n              </button>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\nexport default Course;\n","import React from 'react'\nimport Course from './course';\n\nclass  CourseList extends React.Component {\n\n  constructor(props){\n    super(props)\n    let email = localStorage.getItem(\"email\")\n    this.state ={\n      courses:[],idCurrentCourse:'',email:email\n\n    };\n\n    this.fetchTasks = this.fetchTasks.bind(this);\n    this.actualizar = this.actualizar.bind(this);\n    this.enviarURL = this.enviarURL.bind(this);\n\n  }\n  componentDidMount() {\n    this.fetchTasks();\n\n  }\n  actualizar(listaCursos){\n    console.log(\"actualizar\")\n    this.setState({courses:listaCursos},()=>{\n      console.log(\"ACTUALIZADO\", this.state)\n    })\n  }\n  enviarURL(id){\n\n    if(this.state.idCurrentCourse)\n    {\n      this.setState({idCurrentCourse:''},()=>{\n        this.setState({idCurrentCourse:id})\n      })\n    }\n    else{\n      this.setState({idCurrentCourse:id})\n    }\n\n  }\n  fetchTasks() {\n    let listaCursos =[]\n    let email = this.state.email\n    console.log(email)\n    fetch(`http://localhost:5000/students/${email}`)\n      .then(res => res.json())\n      .then(data => {\n\n        data=data['courses']\n        if(data!=null)\n        {\n        data.forEach(function(element){\n          console.log(\"ciclo\", element)\n          listaCursos.push(element['nameCourse'])\n        })\n        data= data[0]\n        data=data['nameCourse']\n        console.log(\"Nombre curso\",listaCursos);\n        this.actualizar(listaCursos)\n\n\n      }});\n    }\n\n\n  render()\n  {\n    if(this.state.idCurrentCourse){\n      let aux = this.state.idCurrentCourse\n\n      return(\n      <div className=\"principal\">\n      <div className=\"course-list\">\n      <br></br>\n      <h1>Mis Cursos</h1>\n      <ul>\n      {this.state.courses.map(course => <h4 key={course} id={course} onClick={()=>this.enviarURL(course)}>{course}</h4 >)}\n      </ul>\n      <hr></hr>\n      <button id=\"nuevo\"className=\"btn btn-light nuevoCurso\" onClick={()=>this.enviarURL(\"nuevo\")}>Nuevo</button>\n\n    </div>\n    <Course idCourse={aux}></Course>\n\n    </div>\n\n      )\n\n\n    }\n    else{\n    return (\n\n    <div>\n    <div className=\"course-list\">\n      <br></br>\n      <h1>Mis Cursos</h1>\n      <ul>\n      {this.state.courses.map(course => <h4 key={course} id={course} onClick={()=>this.enviarURL(course)}>{course}</h4 >)}\n\n      </ul>\n      <hr></hr>\n      <button className=\"btn btn-light nuevoCurso\" onClick={()=>this.enviarURL(\"nuevo\")}>Nuevo</button>\n\n    </div>\n\n    </div>\n\n  );}}\n\n}\n\nexport default CourseList;\n\n","import React from \"react\";\nimport CourseList from \"../components/courseList\";\n\nclass Principal extends React.Component {\n  render() {\n    return (\n      <div className=\"principal\">\n        <CourseList></CourseList>\n      </div>\n    );\n  }\n}\nexport default Principal;\n","import React from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/header\";\nimport Principal from \"./components/principal\";\n\nclass App extends React.Component {\n  render() {\n    if (localStorage.getItem(\"loggeado\") != null) {\n      return (\n        <div className=\"App\">\n          <Header log=\"true\"></Header>\n          <br></br>\n          <Principal></Principal>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"App\">\n          <Header></Header>\n          <br></br>\n          <br></br>\n          <br></br>\n          <div className=\"centrado\">\n            <img\n              src=\"https://firebasestorage.googleapis.com/v0/b/proyectodiana-b940e.appspot.com/o/a-.png?alt=media&token=0e907819-25db-490c-922e-76c410412be6\"\n              alt=\"aaa\"\n            ></img>\n            <div>\n              Icons made by{\" \"}\n              <a\n                href=\"https://www.flaticon.com/authors/freepik\"\n                title=\"Freepik\"\n              >\n                Freepik\n              </a>{\" \"}\n              from{\" \"}\n              <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">\n                www.flaticon.com\n              </a>\n            </div>\n          </div>\n          <br></br>\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}